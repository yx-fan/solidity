{
	"id": "36906c3b4f859f10c2efbaef295701f0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/conversions.sol": {
				"content": "pragma solidity >=0.7.0 < 0.9.0;\n\n\n// smart contracts that are cost efficient\n\n\ncontract learnConversions {\n\n    // uint default is 256\n    // uint is a unsigned integer which has a minimum value of 0 and maximum of 2^256-1\n    uint number = 2;\n\n    // small version of uint256\n    uint32 a = 0x12345678;\n    uint16 b = uint16(a); //b = 0x5678, losing higher order bits\n\n    uint16 c = 0x1234;\n    uint32 d = uint32(c); // d = 0x00001234\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/conversions.sol": {
				"learnConversions": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/conversions.sol\":80:439  contract learnConversions {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/conversions.sol\":242:243  2 */\n  0x02\n    /* \"contracts/conversions.sol\":228:243  uint number = 2 */\n  0x00\n  sstore\n    /* \"contracts/conversions.sol\":293:303  0x12345678 */\n  0x12345678\n    /* \"contracts/conversions.sol\":282:303  uint32 a = 0x12345678 */\n  0x01\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/conversions.sol\":327:328  a */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffff\n  and\n    /* \"contracts/conversions.sol\":309:329  uint16 b = uint16(a) */\n  0x01\n  exp(0x0100, 0x04)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/conversions.sol\":386:392  0x1234 */\n  0x1234\n    /* \"contracts/conversions.sol\":375:392  uint16 c = 0x1234 */\n  0x01\n  exp(0x0100, 0x06)\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/conversions.sol\":416:417  c */\n  0x01\n  0x06\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffff\n  and\n    /* \"contracts/conversions.sol\":409:418  uint32(c) */\n  0xffff\n  and\n    /* \"contracts/conversions.sol\":398:418  uint32 d = uint32(c) */\n  0x01\n  exp(0x0100, 0x08)\n  dup2\n  sload\n  dup2\n  0xffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/conversions.sol\":80:439  contract learnConversions {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/conversions.sol\":80:439  contract learnConversions {... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b1cbc424fc7f5cd0d5bd84b043642f37eacba1305b0a89ab68886c1944da3ff464736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405260026000556312345678600160006101000a81548163ffffffff021916908363ffffffff160217905550600160009054906101000a900463ffffffff16600160046101000a81548161ffff021916908361ffff160217905550611234600160066101000a81548161ffff021916908361ffff160217905550600160069054906101000a900461ffff1661ffff16600160086101000a81548163ffffffff021916908363ffffffff16021790555034801560bc57600080fd5b50603f806100cb6000396000f3fe6080604052600080fdfea2646970667358221220b1cbc424fc7f5cd0d5bd84b043642f37eacba1305b0a89ab68886c1944da3ff464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x0 SSTORE PUSH4 0x12345678 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH1 0x1 PUSH1 0x4 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1234 PUSH1 0x1 PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH1 0x1 PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH1 0xBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH2 0xCB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xCB 0xC4 0x24 0xFC PUSH32 0x5CD0D5BD84B043642F37EACBA1305B0A89AB68886C1944DA3FF464736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "80:359:0:-:0;;;242:1;228:15;;293:10;282:21;;;;;;;;;;;;;;;;;;;;327:1;;;;;;;;;;;309:20;;;;;;;;;;;;;;;;;;;;386:6;375:17;;;;;;;;;;;;;;;;;;;;416:1;;;;;;;;;;;409:9;;398:20;;;;;;;;;;;;;;;;;;;;80:359;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220b1cbc424fc7f5cd0d5bd84b043642f37eacba1305b0a89ab68886c1944da3ff464736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 0xCB 0xC4 0x24 0xFC PUSH32 0x5CD0D5BD84B043642F37EACBA1305B0A89AB68886C1944DA3FF464736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "80:359:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "123718",
								"totalCost": "136318"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 242,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 228,
									"end": 243,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 228,
									"end": 243,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 293,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "12345678"
								},
								{
									"begin": 282,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 282,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 282,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 282,
									"end": 303,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 282,
									"end": 303,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 282,
									"end": 303,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 282,
									"end": 303,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 327,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 327,
									"end": 328,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 327,
									"end": 328,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 327,
									"end": 328,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 327,
									"end": 328,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 309,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 309,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 309,
									"end": 329,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 309,
									"end": 329,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 309,
									"end": 329,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 309,
									"end": 329,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 386,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "1234"
								},
								{
									"begin": 375,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 375,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 375,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 375,
									"end": 392,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 375,
									"end": 392,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 375,
									"end": 392,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 375,
									"end": 392,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 416,
									"end": 417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 416,
									"end": 417,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 416,
									"end": 417,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 416,
									"end": 417,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 409,
									"end": 418,
									"name": "PUSH",
									"source": 0,
									"value": "FFFF"
								},
								{
									"begin": 409,
									"end": 418,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 398,
									"end": 418,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 398,
									"end": 418,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 80,
									"end": 439,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 439,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b1cbc424fc7f5cd0d5bd84b043642f37eacba1305b0a89ab68886c1944da3ff464736f6c63430008120033",
									".code": [
										{
											"begin": 80,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 80,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 80,
											"end": 439,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 439,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/conversions.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/conversions.sol\":\"learnConversions\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/conversions.sol\":{\"keccak256\":\"0x57c47728301e3ea47db2dec5078587e749938caf118490447a9b9372306d8a6f\",\"urls\":[\"bzz-raw://81f30aec570e7b7c8a71b92116d4d810908453140b26243f9f25e34d87d06c8e\",\"dweb:/ipfs/Qma4q5XNab7pRr8wFNhwrCMUPAJHrKXyLvDvQJMhiRLzo5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 4,
								"contract": "contracts/conversions.sol:learnConversions",
								"label": "number",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/conversions.sol:learnConversions",
								"label": "a",
								"offset": 0,
								"slot": "1",
								"type": "t_uint32"
							},
							{
								"astId": 13,
								"contract": "contracts/conversions.sol:learnConversions",
								"label": "b",
								"offset": 4,
								"slot": "1",
								"type": "t_uint16"
							},
							{
								"astId": 16,
								"contract": "contracts/conversions.sol:learnConversions",
								"label": "c",
								"offset": 6,
								"slot": "1",
								"type": "t_uint16"
							},
							{
								"astId": 22,
								"contract": "contracts/conversions.sol:learnConversions",
								"label": "d",
								"offset": 8,
								"slot": "1",
								"type": "t_uint32"
							}
						],
						"types": {
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/conversions.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/conversions.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/conversions.sol": {
				"ast": {
					"absolutePath": "contracts/conversions.sol",
					"exportedSymbols": {
						"learnConversions": [
							23
						]
					},
					"id": 24,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:32:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "learnConversions",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 23,
							"linearizedBaseContracts": [
								23
							],
							"name": "learnConversions",
							"nameLocation": "89:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"mutability": "mutable",
									"name": "number",
									"nameLocation": "233:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "228:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "228:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 3,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "242:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "a",
									"nameLocation": "289:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "282:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 5,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "282:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"hexValue": "30783132333435363738",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "293:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_305419896_by_1",
											"typeString": "int_const 305419896"
										},
										"value": "0x12345678"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 13,
									"mutability": "mutable",
									"name": "b",
									"nameLocation": "316:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "309:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 8,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "309:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 11,
												"name": "a",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 7,
												"src": "327:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											],
											"id": 10,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "320:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint16_$",
												"typeString": "type(uint16)"
											},
											"typeName": {
												"id": 9,
												"name": "uint16",
												"nodeType": "ElementaryTypeName",
												"src": "320:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 12,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "320:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 16,
									"mutability": "mutable",
									"name": "c",
									"nameLocation": "382:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "375:17:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 14,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "375:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "307831323334",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "386:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4660_by_1",
											"typeString": "int_const 4660"
										},
										"value": "0x1234"
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "d",
									"nameLocation": "405:1:0",
									"nodeType": "VariableDeclaration",
									"scope": 23,
									"src": "398:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint32",
										"typeString": "uint32"
									},
									"typeName": {
										"id": 17,
										"name": "uint32",
										"nodeType": "ElementaryTypeName",
										"src": "398:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 20,
												"name": "c",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 16,
												"src": "416:1:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												}
											],
											"id": 19,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "409:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_uint32_$",
												"typeString": "type(uint32)"
											},
											"typeName": {
												"id": 18,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "409:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "409:9:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_uint32",
											"typeString": "uint32"
										}
									},
									"visibility": "internal"
								}
							],
							"scope": 24,
							"src": "80:359:0",
							"usedErrors": []
						}
					],
					"src": "0:439:0"
				},
				"id": 0
			}
		}
	}
}